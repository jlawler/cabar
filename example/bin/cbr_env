#!/bin/bash

_vars=''
_export() {
_n="$1"; shift
eval export "$_n='$*'"
_vars="$_vars $_n"
}

d="$(dirname "$0")"
d="$(cd "$d" && /bin/pwd)"
base="$(cd "$d/.." && /bin/pwd)"
repo="$base/repo"

# Overlay dev(eloper), prod(uction), plat(form) and cabar itself.
_export CABAR_PATH "${repo}/dev:${repo}/prod:${repo}/plat:@${repo}/.."

# Parse a config file.
_export CABAR_CONFIG "${base}/cabar_conf.yml"

# Require a top-level component.
# _export CABAR_REQUIRE 'c1'

# Select components
# _export CABAR_SELECT 'c1/1.2 ruby/>1.8'
#
cabar_bin="$(cd "$d/../../bin" && /bin/pwd)"

_export PATH "$d:$cabar_bin:$PATH"

case "$1"
in
  --help)
  cat <<HELP
$0 - setup basic env vars for cbr.

  $0 --env 

Print environment variables set on STDOUT

  $0 <cmd> <args> ...

Run <cmd> under environment for cbr.
Example: $0 cbr comp list

HELP
  ;;
  --env)
    for _n in $_vars
    do
      eval _v='"$'$_n'"'
      echo "$_n='$_v'; export $_n;"
    done
  ;;
  *)
    exec "$@"
  ;;
esac

