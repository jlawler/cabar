= Known Issues:

* Component cannot define conflicting facets, commands or plugins, none of these are versionable.

* A faulty component's plugin may prevent entire system from working.

= TO DO:

* Remove EnvVarPath, extend Path to support environment variables dynamically.

* Allow facet prototypes to be defined in cabar.yml.

* Add documentation strings to Facet prototypes.

* Change Facet.key to Facet._key to avoid collision with future use.

* Change Facet.owner to Facet._owner

* Change Facet.context to Facet._context

* Add support to automatically require top_level components, via an attribute on a component in its cabar.yml file.


= From discussion with Jeremy 2008/03/10

* Unit test against example directory.

== Version control plugins

* CABAR_REMOTE_PATH specifies a remote list of repositories:
* CABAR_REMOTE_PATH="svn://rubyforge.org/package ; http://foobar.com/cabar ; p4://"
* CABAR_REMOTE_DEST specifies where "cabar remote get" will put components.

    cbr remote get -R cnuapp/1.1
    cbr remote list
    cbr remote update 

* Modify cabar config from command line.

    cbr config
    cbr config set select <component> 1.2

* Need web_service facet

    cbr bin lsws start
    cbr bin apache start

* Facets realizations are not scoped. Provide a mechanism to select particular component facets rather than entire components.

* Facets have top-level commands nameds after them:

    cbr action list
    cbr action run <action>
    cbr bin list
    cbr bin run <cmd> <args> ...
    cbr lib/ruby doc

* action run should be only on top-level components by default.

    cbr action -T run test
    cbr action run test

* runsv facet

    cbr runsv install <component> ...

