<%
  # Calls ruby to get information about itself.
  # Plugin info about ruby into a "ruby" component via eRB below.
  ruby_info = eval `ruby -r rbconfig -e 'x = { :version => RUBY_VERSION, :patchlevel => (RUBY_PATCHLEVEL rescue 0), :load_path => $:, :ruby_arch => Config::CONFIG["arch"] }; puts x.inspect;'`.chomp
  ruby_info[:prog] = File.expand_path(`which ruby`.chomp)
  ruby_info[:available] = ! ruby_info[:prog].to_s.empty?
  ruby_info[:bin] = File.dirname(ruby_info[:prog])
  # pp ruby_info
 %>
cabar:
  version: '1.0'
  component:
    name: ruby
    version: <%= "v#{ruby_info[:version]}.#{ruby_info[:patchlevel]}" %>
    description: "Ruby - <%= ruby_info[:prog] %>"
    enabled: <%= ruby_info[:available].inspect %>
    base_directory: <%= File.dirname(ruby_info[:bin]).inspect %>
    ruby: 
      arch: <%= ruby_info[:ruby_arch].inspect %>
  provides:
    bin:
      abs_path: [ <%= ruby_info[:bin].inspect %> ]
      list_only: [ :ruby, :erb, :irb, :rdoc, :ri, :testrb ]
    lib/ruby:
      abs_path: <%= ruby_info[:load_path].inspect %>
      rdoc_generate: false
    lib/perl:
      enabled: false

